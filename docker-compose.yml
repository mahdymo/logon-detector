
version: '3.8'

services:
  # PostgreSQL Database - Internal only
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: login_detector
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    # No external ports - internal communication only

  # Login Page Analyzer Microservice - Internal only
  analyzer-service:
    build:
      context: ./services/analyzer
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/login_detector
      - PORT=3001
    depends_on:
      - postgres
    # No external ports - internal communication only

  # Form Storage Microservice - Internal only
  form-service:
    build:
      context: ./services/forms
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/login_detector
      - PORT=3002
    depends_on:
      - postgres
    # No external ports - internal communication only

  # Login Submission Microservice - Internal only
  submitter-service:
    build:
      context: ./services/submitter
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/login_detector
      - PORT=3003
    depends_on:
      - postgres
    # No external ports - internal communication only

  # Frontend Build Stage
  frontend-builder:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    volumes:
      - frontend-build:/app/dist

  # API Gateway with Integrated Frontend - ONLY external access point
  api-gateway:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:80:3000"  # ONLY external port - everything goes through here
    environment:
      - ANALYZER_SERVICE_URL=http://analyzer-service:3001
      - FORM_SERVICE_URL=http://form-service:3002
      - SUBMITTER_SERVICE_URL=http://submitter-service:3003
      - PORT=3000
    volumes:
      - frontend-build:/app/frontend-build:ro
    depends_on:
      - analyzer-service
      - form-service
      - submitter-service
      - frontend-builder

volumes:
  postgres_data:
  frontend-build:
